group 'scalajs'
version '1.0-SNAPSHOT'

import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile group: 'org.scala-js', name: 'scalajs-cli_2.11', version: '0.6.7'
    compile group: 'org.scala-js', name: 'scalajs-compiler_2.11.7', version: '0.6.7'
    compile group: 'org.scala-js', name: 'scalajs-library_2.11', version: '0.6.7'
}

buildscript {
    repositories {
        mavenCentral()
    }
}
defaultTasks 'compileJS'

def cliPath = 'lib/scalajs-cli_2.11-0.6.7/'
def srcPath = 'src/main/scala/'
def sjsirPath = 'sjsir/'
def jsPath = 'js/'
def sjslibPath = configurations.runtime.filter { it.name.equals("scalajs-library_2.11-0.6.7.jar") }.first().absolutePath
def sjscompPath = configurations.runtime.filter {
    it.name.equals("scalajs-compiler_2.11.7-0.6.7.jar")
}.first().absolutePath
def exec = Os.isFamily(Os.FAMILY_WINDOWS) ? 'cmd' : 'bash'

task createDirs {
    description = "Creates necessary directories for compiling scalaJS."
    def sjsirDir = file(sjsirPath)
    if (!sjsirDir.exists()) {
        if (!sjsirDir.mkdir()) {
            logger.error('Couldn\'t create "' + sjsirPath + '" directory')
        }
    }
    def jsDir = file(jsPath)
    if (!jsDir.exists()) {
        if (!jsDir.mkdir()) {
            logger.error('Couldn\'t create "' + jsPath + '"directory')
        }
    }
}
task compileSJSIR(type: Exec, dependsOn: 'createDirs') {
    description = "Compiles all classes (default) in " + srcPath + " to sjsir and class files in " + sjsirPath + ".\n" +
            "Usage : gradlew compileSJSIR -Pfile 'nameOfFile'\nDepends on createDirs."
    executable = exec
    doFirst {
        def toCompile
        if (!properties.containsKey('file')) {
            toCompile = '*.scala'
        } else {
            toCompile = file
            logger.info('file = ' + file)
        }
        logger.info('toCompile = ' + toCompile)
        args = ['/C', 'scalac', '-classpath', sjslibPath, '-Xplugin', sjscompPath, '-d', sjsirPath, srcPath + toCompile]
    }
}
task compileSJSIR2(type: Exec) {
    executable = cliPath + "scalajsc.bat"
    args = ['-d', sjsirPath, srcPath + 'test.scala']
}
task compileJS(type: Exec, dependsOn: 'compileSJSIR') {
    description = "Compiles all sjsir files in " + sjsirPath + " to a single js file in " + jsPath + ".\nDepends on compileSJSIR."
    executable = exec
    def jsld = 'org.scalajs.cli.Scalajsld'
    def cliAssemblyPath = 'lib/scalajs-cli-assembly_2.11-0.6.7.jar'
    def output = jsPath + project.name + '.js'
    args = ['/C', 'scala', '-classpath', cliAssemblyPath, jsld, '--stdlib', sjslibPath, sjsirPath, '-o', output]
}
task compileJS2(type: Exec) {
    executable = cliPath + "scalajsld.bat"
    args = [sjsirPath, '-d', jsPath]
}
task printDep << {
    configurations.runtime.each { println it }
}

compileJS.mustRunAfter compileSJSIR