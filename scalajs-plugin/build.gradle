group 'com.github.gtache'
version '0.1.2'

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

apply plugin: 'scala'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile gradleApi()
    compile 'org.codehaus.groovy:groovy-all:2.4.4'
    compile 'org.scala-lang:scala-compiler:2.11.8'
    compile 'org.scala-lang:scala-library:2.11.8'
    compile group: 'org.scala-js', name: 'scalajs-sbt-test-adapter_2.11', version: '0.6.8'
    compile group: 'org.scala-js', name: 'scalajs-js-envs_2.11', version: '0.6.8'
    compile group: 'org.scala-js', name: 'scalajs-tools_2.11', version: '0.6.8'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'com.google.guava', name: 'guava', version: '19.0'
}

signing {
    required { project.hasProperty('sign') && isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

signArchives.onlyIf { project.hasProperty('sign') }

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task groovydocJar(type: Jar) {
    classifier = 'groovydoc'
    from groovydoc
}

task scaladocJar(type: Jar) {
    classifier = 'scaladoc'
    from scaladoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, groovydocJar, scaladocJar, sourcesJar
}

if (project.hasProperty('upload')) {
    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'Scala.JS plugin'
                    packaging 'jar'
                    description 'A plugin used to build Scala.js on Gradle.'
                    url 'https://github.com/gtache/scalajs-gradle'
                    licenses {
                        license {
                            name 'Scala License'
                            url 'http://www.scala-lang.org/license.html'
                        }
                    }
                    scm {
                        connection 'scm:git:ssh://git@github.com:gtache/scalajs-gradle.git'
                        developerConnection 'scm:git:ss://git@github.com:gtache/scalajs-gradle.git'
                        url 'https://github.com/gtache/scalajs-gradle'
                    }

                    developers {
                        developer {
                            id 'gtache'
                            name 'Guillaume TÃ¢che'
                            email 'guillaume.tache@hotmail.com'
                        }
                    }
                }
            }
        }
    }
}

task copyTestResources(type: Copy) {
    from "${projectDir}/src/test/resources"
    into "${buildDir}/classes/test"
}
processTestResources.dependsOn('copyTestResources')

tasks.getByName('compileGroovy').dependsOn('compileScala')

task wrapper(type: Wrapper) {
    gradleVersion = '2.11'
}